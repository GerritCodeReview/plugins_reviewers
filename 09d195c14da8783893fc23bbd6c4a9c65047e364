{
  "comments": [
    {
      "key": {
        "uuid": "3e985f47_d1943adc",
        "filename": "src/main/resources/Documentation/rest-api.md",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-28T12:53:34Z",
      "side": 1,
      "message": "I am not sure I like such cryptical Ids. An alternative approach would be to use named sections? Say, application has 4 code areas, then project owner could upload 4 named sections:\n\n* sshd\n* httpd\n* server\n* ui\n\nsomething like this:\n\n  PUT /projects/myproject/reviewers-sections/httpd\t\n  {\n    \"filter\": \"dir:httpd\"\n    \"reviewer\": \"Alice\"\n  }\n\n  PUT /projects/myproject/reviewers-sections/ui\n  {\n    \"filter\": \"dir:ui\"\n    \"reviewer\": \"Bob\"\n  }\n\n\nand use it like a key? Diadvantage is , of course, we would need additional input, that however may also be used as documentation.",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 59,
        "endChar": 61
      },
      "revId": "09d195c14da8783893fc23bbd6c4a9c65047e364",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20a174ef_6b8495b9",
        "filename": "src/main/resources/Documentation/rest-api.md",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-04-28T13:41:25Z",
      "side": 1,
      "message": "Since the Id of a filter section is the filter itself the URL aren\u0027t always human-readable but the same could be said for project-ids\n\n    projects/my%2Fown%2Fproject\n\nor change-ids\n   my%2Fown%2Fproject~my%2Fbranch~I1234...\n\nI\u0027m not claiming to be a REST expert but this way it get\u0027s quite neat.\nAdding an entire section:\n\n    PUT projects/my-project/reviewers-filters/* -\u003c {\"reviewers\":[\"Ed\",\"Sue\"]}\n\nUpserting the reviewers for the section:\n\n    PUT projects/my-project/reviewers-filters/*/reviewers -\u003c [\"Eve\",\"Ned\"]\n\nAdding a single reviewer:\n\n    POST project/my-projeect/reviewers-filters/*/reviewers -\u003c {\"reviewer\":\"Pam\"}\n\nRemoving a single reviewer:\n\n    DELETE project/my-projeect/reviewers-filters/*/reviewers/Sue",
      "parentUuid": "3e985f47_d1943adc",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 59,
        "endChar": 61
      },
      "revId": "09d195c14da8783893fc23bbd6c4a9c65047e364",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e249570b_fe275e24",
        "filename": "src/main/resources/Documentation/rest-api.md",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-29T06:49:15Z",
      "side": 1,
      "message": "\u003e Since the Id of a filter section is the filter itself the URL aren\u0027t always human-readable but the same could be said for project-ids\n\u003e \n\u003e     projects/my%2Fown%2Fproject\n\u003e \n\u003e or change-ids\n\u003e    my%2Fown%2Fproject~my%2Fbranch~I1234...\n\nWith one small but important difference: project id and change id combination: project~branch~change-number are unique, while suggested filter are not.\n\nAlready today we can have two sections:\n\n  [\n    \"filter\": \"dir:foo\",\n    \"reviewer\": \"bar\"\n  ],\n  [\n    \"filter\": \"dir:foo\",\n    \"reviewer\": \"baz\"\n  ]\n\nSee example in checks plugins for checker definition. Checker can also have query filter, but they do identifed themself with unique id: [1].\n\n* [1] https://gerrit.googlesource.com/plugins/checks/+/refs/heads/master/resources/Documentation/rest-api-checkers.md#update-checker",
      "parentUuid": "20a174ef_6b8495b9",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 59,
        "endChar": 61
      },
      "revId": "09d195c14da8783893fc23bbd6c4a9c65047e364",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9419b87b_59cb2830",
        "filename": "src/main/resources/Documentation/rest-api.md",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-04-29T07:59:50Z",
      "side": 1,
      "message": "\u003e Already today we can have two sections:\n\u003e \n\u003e   [\n\u003e     \"filter\": \"dir:foo\",\n\u003e     \"reviewer\": \"bar\"\n\u003e   ],\n\u003e   [\n\u003e     \"filter\": \"dir:foo\",\n\u003e     \"reviewer\": \"baz\"\n\u003e   ]\n\nIIUC this would not be possible for an individual project.\n\nTo me the definition of a filter-section is something like:\n\"A _set of accounts_ that should be added as reviewer for the changes matching a _specific filter_\".\n\nIf you \"currently\" add [\"filter\": \"dir:foo\", \"reviewer\": \"bar\"] and [\"filter\": \"dir:foo\", \"reviewer\": \"baz\"] it would result in:\n\n   [\n     \"filter\": \"dir:foo\",\n     \"reviewers\": [\"bar\", \"baz\"]\n   ],\n\nA more precise representation would be as a map:\n\n    filters_sections: {\n      \"dir:foo\" : {\n        \"reviewers\": [\"bar\", \"baz\"],\n      }\n    }\n\n\u003e \n\u003e See example in checks plugins for checker definition. Checker can also have query filter, but they do identifed themself with unique id: [1].\n\u003e \n\u003e * [1] https://gerrit.googlesource.com/plugins/checks/+/refs/heads/master/resources/Documentation/rest-api-checkers.md#update-checker\n\nThere\u0027s a significant difference.\nChecks *can* have a query.\nA filter-section *must* have a query.\n(Like access-sections that doesn\u0027t make sense without a ref-definition.)",
      "parentUuid": "e249570b_fe275e24",
      "range": {
        "startLine": 59,
        "startChar": 44,
        "endLine": 59,
        "endChar": 61
      },
      "revId": "09d195c14da8783893fc23bbd6c4a9c65047e364",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}